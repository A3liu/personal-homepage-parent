<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<!-- scan 设置为true 当配置文件发生变化时 会重新加载
		 60秒扫描一次  DEBUG 设置为true 将打印出logback 内部日志信息
		 实时查看logback 运行状态-->
		 
	<contextName>logback</contextName>
	<!-- cotextname 每个logger 都关联到logger上下文，默认为default 可以修改
		一但设置不能修改，可以通过%contextName 打印日志上下文名称 -->
		
	<property name="log.path" value="\\applog\\info.log"></property>
	
	<!-- 输出到控制台 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>ERROR</level>
		</filter> -->
		<!-- 过滤器 可以把指定级别以下的日志过滤 -->
		
		<encoder><!-- 指定格式 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss} %contextName [%thread] %-5level %logger{36}-  %c  %msg%n</pattern>
		</encoder>
	</appender>
	
	<!-- 输出到文件 -->
	<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}</file>
		
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>logback.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<!-- 日志文件的切割策略 -->
		
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} %contextName [%thread] %-5level -- %logger{36}- %c  %msg%n</pattern>
		</encoder>
		
	</appender>
	
	<!-- root 节点为必选节点 指定日志的输出级别只有一个level级别,以及指定appender -->
	<root level="info">
		<appender-ref ref="console"/>
		<appender-ref ref="file"/>
	</root>
	
	
	<!-- loger 的name 属性指定loger约束的某一个包，或者具体的某一个类
		level 设置答应级别
		addtivity 是否向上级Loger 传递打印信息，默认为true
	-->
	<!-- <logger name="com.feifan.controller"/> -->
	
	<!-- additivity 是否向上级传递loger 传递打印信息 -->
	<!-- <logger name="com.feifan.controller.RunApp" level="info" additivity="false">
		<appender-ref ref="console"/>
		<appender-ref ref="file"/>
	</logger>  -->
	
	<!-- 根据不同的环境（prod:生产环境，test:测试环境，dev:开发环境） 来定义不同的日志输出 -->
	<!-- 在application.propertise 中指定用哪个 spring.profiles.active = dev,test -->
	<!-- 测试环境+开发环境，多个用逗号隔开 -->
	<springProfile name="dev,test">
		<logger name="com.a3" level="info"/>
	</springProfile>
	
	<!-- 生产环境 -->
	<springProfile name="prod">
		<logger name="com.a3" level="WARN"/>
	</springProfile>
	
</configuration>